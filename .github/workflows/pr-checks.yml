name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check branch naming
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          if [[ ! "$BRANCH_NAME" =~ ^(feature|hotfix|bugfix|refactor|docs|test)/.+ ]]; then
            echo "❌ Branch name must follow pattern: feature/*, hotfix/*, bugfix/*, refactor/*, docs/*, or test/*"
            echo "Current branch: $BRANCH_NAME"
            exit 1
          fi
          echo "✅ Branch name is valid: $BRANCH_NAME"

      - name: Check PR title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ ! "$PR_TITLE" =~ ^(feat|fix|docs|test|refactor|chore|hotfix): ]]; then
            echo "❌ PR title must start with: feat:, fix:, docs:, test:, refactor:, chore:, or hotfix:"
            echo "Current title: $PR_TITLE"
            exit 1
          fi
          echo "✅ PR title is valid: $PR_TITLE"

  test:
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        run: |
          echo "### 🔍 Linting Results" >> $GITHUB_STEP_SUMMARY
          ruff check app/ tests/ || echo "⚠️ Ruff found issues" >> $GITHUB_STEP_SUMMARY
          mypy app/ || echo "⚠️ Mypy found issues" >> $GITHUB_STEP_SUMMARY

      - name: Run tests
        env:
          GITHUB_TOKEN: test_token
          GITHUB_REPOS: testorg/repo1
          WEBHOOK_TOKEN: test_secret
        run: |
          pytest --cov=app --cov-report=term-missing --cov-report=xml
          echo "### ✅ Test Results" >> $GITHUB_STEP_SUMMARY
          echo "All tests passed with required coverage!" >> $GITHUB_STEP_SUMMARY

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 80
          MINIMUM_ORANGE: 70
